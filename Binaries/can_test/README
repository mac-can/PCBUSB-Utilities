CAN Tester (for PCAN-USB interfaces on macOS, x86_64)

Copyright (C) 2007, 2012-2017 by UV Software, Berlin

Usage: can_test <interface> [<options>]
Options for receiver test (default):
  -r, --receive                 count received messages until ^C is pressed
  -n, --number=<number>         check message number starting with <number>
  -s, --stop                    stop on error (with option --number)
  -m, --mode=(2.0 | FDf[+BSR])  CAN operation mode: CAN 2.0 or CAN FD format
  -b, --baudrate=<baudrate>     CAN 2.0 bit timing in kbps (default=250)
      --bitrate=<bitrate>       CAN FD bit rate (as a string)
  -v, --verbose                 show detailed bit rate settings
Options for transmitter test:
  -t, --transmit=<time>         send messages for the given time in seconds
  -f, --frames=<number>         alternatively send the given number of messages
  -c, --cycle=<cycle>           cycle time in milliseconds (default=0)
  -u, --usec=<cycle>            cycle time in microseconds (default=0)
  -d, --data=<length>           send data of given length (default=0)
  -i, --id=<cob-id>             use given identifier (default=100h)
  -n, --number=<number>         set first message number (default=0)
  -m, --mode=(2.0 | FDf[+BSR])  CAN operation mode: CAN 2.0 or CAN FD format
  -b, --baudrate=<baudrate>     CAN 2.0 bit timing in kbps (default=250)
      --bitrate=<bitrate>       CAN FD bit rate (as a string)
  -v, --verbose                 show detailed bit rate settings
Options:
  -a, --all                     list all available CAN interfaces and exit
  -h, --help                    display this help and exit
      --version                 output version information and exit
Interfaces:
  PCAN-USB1
  PCAN-USB2
  PCAN-USB3
  PCAN-USB4
  PCAN-USB5
  PCAN-USB6
  PCAN-USB7
  PCAN-USB8
CAN 2.0 baud rate index (default=3):
  0 = 1000 kBit/s
  1 = 800 kBit/s
  2 = 500 kBit/s
  3 = 250 kBit/s
  4 = 125 kBit/s
  5 = 100 kBit/s
  6 = 50 kBit/s
  7 = 20 kBit/s
  8 = 10 kBit/s
CAN FD bit rate as comma-separeted <key>=<value>-list:
  f_clock=<value>      frequency in Hz or
  f_clock_mhz=<value>  frequency in MHz
  nom_brp=<value>      bit-rate prescaler (nominal)
  nom_tseg1=<value>    time segment 1 (nominal)
  nom_tseg2=<value>    time segment 2 (nominal)
  nom_sjw=<value>      sync. jump width (nominal)
  nom_sam=<value>      sampling (only SJA1000)
  data_brp=<value>     bit-rate prescaler (FD data)
  data_tseg1=<value>   time segment 1 (FD data)
  data_tseg2=<value>   time segment 2 (FD data)
  data_sjw=<value>     sync. jump width (FD data).
Examples:
  125kbps:1000kbps     f_clock_mhz=80,nom_brp=2,nom_tseg1=255,nom_tseg2=64,nom_sjw=64,data_brp=2,data_tseg1=31,data_tseg2=8,data_sjw=8
  250kbps:2000kbps     f_clock_mhz=80,nom_brp=2,nom_tseg1=127,nom_tseg2=32,nom_sjw=32,data_brp=2,data_tseg1=15,data_tseg2=4,data_sjw=4
  500kbps:4000kbps     f_clock_mhz=80,nom_brp=2,nom_tseg1=63,nom_tseg2=16,nom_sjw=16,data_brp=2,data_tseg1=7,data_tseg2=2,data_sjw=2
  1000kbps:8000kbps    f_clock_mhz=80,nom_brp=2,nom_tseg1=31,nom_tseg2=8,nom_sjw=8,data_brp=2,data_tseg1=3,data_tseg2=1,data_sjw=1
  2000kbps:10000kbps   f_clock_mhz=80,nom_brp=1,nom_tseg1=31,nom_tseg2=8,nom_sjw=1,data_brp=2,data_tseg1=2,data_tseg2=1,data_sjw=1
Hazard note:
  Do not connect your CAN device to a real CAN network when using this program.
  This can damage your application.
 
This software is freeware without any warranty or support!

Written by Uwe Vogt, UV Software <http://www.uv-software.de/>
